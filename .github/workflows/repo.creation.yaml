---
name: Automate Repo Creation
on:
  issues:
    types:
      - opened
jobs:
  create-repo:
    #if: contains(github.event.issue.labels.*.name, 'repo-creation')
    runs-on: ubuntu-latest
    steps:
      - name: Get issue content
        id: issue
        run: echo "${{ github.event.issue.body }}"

      - name: Set outputs
        id: set-outputs
        run: |
          echo "repo_description=$(echo '${{ github.event.issue.body }}' | sed -n '/Repo Description/{n;p;}')" >> $GITHUB_ENV
          echo "repository_name=$(echo '${{ github.event.issue.body }}' | sed -n '/Repository Name/{n;p;}')" >> $GITHUB_ENV
          echo "visibility=$(echo '${{ github.event.issue.body }}' | sed -n '/Visibility/{n;p;}')" >> $GITHUB_ENV
          echo "::set-output name=repo_name::$(echo '${{ github.event.issue.body }}' | grep 'Repository Name' | cut -d':' -f2 | xargs)" >> $GITHUB_ENV
          echo "::set-output name=repo_description::$(echo '${{ github.event.issue.body }}' | grep 'Repository Description' | cut -d':' -f2 | xargs)" >> $GITHUB_ENV
          echo "::set-output name=repo_visibility::$(echo '${{ github.event.issue.body }}' | grep 'Visibility' | cut -d':' -f2 | xargs | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Output parsed content
        run: |
          echo "Description: ${{ env.repo_description }}"
          echo "Use case: ${{ env.repository_name }}"
          echo "Additional context: ${{ env.visibility }}"
          
      - name: Create repository using GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_REPO_SECRET }}
        run: >
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
           -d '{
             "name": "test-workflow-main",
             "description": "test-workflow-main",
             "auto_init": true 
             "private": true
           }' https://api.github.com/user/repos
      - name: Rename default branch to main
        run: >
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"new_name": "main"}' \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.inputs.repoName }}/branches/main/rename
