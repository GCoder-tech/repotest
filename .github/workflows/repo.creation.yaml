---
name: Automate Repo Creation
on:
  issues:
    types:
      - opened
jobs:
  create-repo:
    #if: contains(github.event.issue.labels.*.name, 'repo-creation')
    runs-on: ubuntu-latest
    steps:
      - name: Get issue content
        id: issue
        run: |
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Issue Body: ${{ github.event.issue.body }}"

      - name: Parse issue content
        id: parse
        run: |
          echo "Repository NAme: $(echo "${{ github.event.issue.body }}" | grep -A 1 'Repository Name' | tail -n 1)"
          echo "Repo Description: $(echo "${{ github.event.issue.body }}" | grep -A 1 'Repo Description' | tail -n 1)"
          echo "Repo Visbility: $(echo "${{ github.event.issue.body }}" | grep -A 1 'Visibility' | tail -n 1)"
          
      - name: Output parsed content
        run: |
          echo "Description: ${{ steps.parse.outputs.repository_name }}"
          echo "Use case: ${{ steps.parse.outputs.repo_description }}"
          echo "Additional context: ${{ steps.parse.outputs.visibility }}"
          
      - name: Create repository using GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_REPO_SECRET }}
        run: >
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
           -d '{
             "name": "${{ steps.extract.outputs.repo_name }}",
             "description": "${{ steps.extract.outputs.repo_description }}",
             "auto_init": true 
             "private": ${{ github.event.inputs.visibility == 'private' }}
           }' https://api.github.com/user/repos
      - name: Rename default branch to main
        run: >
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"new_name": "main"}' \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.inputs.repoName }}/branches/main/rename
