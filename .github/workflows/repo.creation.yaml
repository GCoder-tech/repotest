---
name: Automate Repo Creation
on:
  issues:
    types:
      - opened
jobs:
  create-repo:
    #if: contains(github.event.issue.labels.*.name, 'repo-creation')
    runs-on: ubuntu-latest
    steps:
      - name: Parse issue body
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        
      - name: Validate parsed result
        id: parse
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "buc_code=${{ steps.issue-parser.outputs.issueparser_buc_code }}"
          echo "repository_name=${{ steps.issue-parser.outputs.issueparser_repository_name }}"
          echo "repo_description=$(echo "${{ steps.issue-parser.outputs.issueparser_repo_description }}" | sed 's/"/\\"/g')"
          echo "visibility=$(echo "${{ steps.issue-parser.outputs.issueparser_visibility }}" | sed 's/"/\\"/g')"

          if [ -z "${{ steps.issue-parser.outputs.issueparser_buc_code }}" ]; then
            echo "👷🏼‍♂️ FIS_IssueOps Error: BUC Code is required. Ticket will be closed, please create new ticket with correct info."| gh issue comment ${{ github.event.issue.number }} --repo ${{ github.repository }} --body-file=-
            exit 1
          fi
          if [ -z "${{ steps.issue-parser.outputs.issueparser_repository_name }}" ]; then
            echo "👷🏼‍♂️ FIS_IssueOps Error: Repository Name is required. Ticket will be closed, please create new ticket with correct info."| gh issue comment ${{ github.event.issue.number }} --repo ${{ github.repository }} --body-file=-
            exit 1
          fi
          if [ -z "${{ steps.issue-parser.outputs.issueparser_repo_description }}" ]; then
            echo "👷🏼‍♂️ FIS_IssueOps Error: Repository Description is required. Ticket will be closed, please create new ticket with correct info."| gh issue comment ${{ github.event.issue.number }} --repo ${{ github.repository }} --body-file=-
            exit 1
          fi
      - name: Create repository using GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_REPO_SECRET }}
        run: >
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
           -d '{
             "name": "${{ steps.issue-parser.outputs.issueparser_repository_name }}",
             "description": "${{ steps.issue-parser.outputs.issueparser_repo_description }}",
             "auto_init": true, 
             "private": "${{ steps.issue-parser.outputs.issueparser_visibility }} == 'private'"
           }' https://api.github.com/user/repos
      
      - name: Add Labels
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['issueOps', '${{ steps.issue-parser.outputs.issueparser_buc_code }}']
            })    

      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh auth login --with-token <<< "$GH_TOKEN"

      - name: Rename default branch to master
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh api -X PATCH /repos/${{ github.repository_owner }}/${{ github.event.inputs.repoName }}/branches/main/rename -F new_name=master
      
